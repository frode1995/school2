<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.frode.system.dao.UserInfoDao">

    <select id="get" resultType="com.frode.system.domain.UserInfoDO">
        select `id`,`user_id`,`info_id` from
        sys_user_info where id = #{value}
    </select>

    <select id="list" resultType="com.frode.system.domain.UserInfoDO">
        select `id`,`user_id`,`info_id` from sys_user_info
        <where>
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
            <if test="infoId != null and infoId != ''"> and info_id = #{infoId} </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from sys_user_info
        <where>
            <if test="id != null and id != ''"> and id = #{id} </if>
            <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
            <if test="infoId != null and infoId != ''"> and info_id = #{infoId} </if>
        </where>
    </select>

    <insert id="save" parameterType="com.frode.system.domain.UserInfoDO"
            useGeneratedKeys="true" keyProperty="id">
        insert into sys_user_role
        (
        `user_id`,
        `info_id`
        )
        values
        (
        #{userId},
        #{infoId}
        )
    </insert>

    <update id="update" parameterType="com.frode.system.domain.UserInfoDO">
        update sys_user_info
        <set>
            <if test="userId != null">`user_id` = #{userId}, </if>
            <if test="infoId != null">`info_id` = #{infoId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="remove">
        delete from sys_user_info where id = #{value}
    </delete>

    <delete id="batchRemove">
        delete from sys_user_info where id in
        <foreach item="id" collection="array" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </delete>

    <select id="listInfoId" resultType="long">
        select info_id from
        sys_user_info where
        user_id=#{userId}
    </select>

    <delete id="removeByUserId">
        delete from sys_user_info where user_id=#{userId}
    </delete>

    <delete id="removeByInfoId">
        delete from sys_user_info where info_id=#{infoId}
    </delete>

    <delete id="batchRemoveByUserId">
        delete from sys_user_info where user_id in
        <foreach item="id" collection="array" open="(" separator=","
                 close=")">
            #{id}
        </foreach>
    </delete>
<!--item这里很奇怪  这个功能先不要了-->
   <!-- <insert id="batchSave">
        INSERT INTO sys_user_role(user_id, info_id) values
        <foreach item="item" index="index" collection="list"
                 separator=",">
            (#{item.userId},#{item.infoId})
        </foreach>
    </insert>-->
</mapper>